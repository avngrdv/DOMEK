experiment: "POPEK4_pipeline"

constants:
  description: |
    Star symbol (*) is internally reserved for stop codons that terminate
    translation.
    
    Plus and underscore symbols (+ and _) are internally reserved tokens.
    Numerals (1234567890) are internally reserved for library design 
    specifications. These symbols (123456790+_) should not be used to
    encode amino acids.
    
    Other symbols are OK.   
    
  translation_table:
    ATA: "I"
    ATC: "I"
    ATT: "I"
    ATG: "d"
    ACA: "T"
    ACC: "T"
    ACG: "T"
    ACT: "T"
    AAC: "N"
    AAT: "N"
    AAA: "K"
    AAG: "K"
    AGC: "S"
    AGT: "S"
    AGA: "R"
    AGG: "R"
    CTA: "L"
    CTC: "L"
    CTG: "L"
    CTT: "L"
    CCA: "P"
    CCC: "P"
    CCG: "P"
    CCT: "P"
    CAC: "H"
    CAT: "H"
    CAA: "Q"
    CAG: "Q"
    CGA: "R"
    CGC: "R"
    CGG: "R"
    CGT: "R"
    GTA: "V"
    GTC: "V"
    GTG: "V"
    GTT: "V"
    GCA: "A"
    GCC: "A"
    GCG: "A"
    GCT: "A"
    GAC: "D"
    GAT: "D"
    GAA: "E"
    GAG: "E"
    GGA: "G"
    GGC: "G"
    GGG: "G"
    GGT: "G"
    TCA: "S"
    TCC: "S"
    TCG: "S"
    TCT: "S"
    TTC: "F"
    TTT: "F"
    TTA: "L"
    TTG: "L"
    TAC: "Y"
    TAT: "Y"
    TAA: "*"
    TAG: "*"
    TGC: "a"
    TGT: "a"
    TGA: "*"
    TGG: "W"
    
  aa_SMILES:
    A: "N[C@@H](C)C(=O)"
    D: "N[C@@H](CC(=O)O)C(=O)"
    E: "N[C@@H](CCC(=O)O)C(=O)"
    F: "N[C@@H](Cc1ccccc1)C(=O)"
    G: "NCC(=O)"
    H: "N[C@@H](Cc1c[nH]cn1)C(=O)"
    I: "N[C@@H]([C@H](CC)C)C(=O)"
    K: "N[C@@H](CCCCN)C(=O)"
    L: "N[C@@H](CC(C)C)C(=O)"
    N: "N[C@@H](CC(=O)N)C(=O)"
    P: "O=C[C@@H]1CCCN1"
    Q: "N[C@@H](CCC(=O)N)C(=O)"
    R: "N[C@@H](CCCNC(=N)N)C(=O)"
    S: "N[C@@H](CO)C(=O)"
    T: "N[C@@H]([C@H](O)C)C(=O)"
    V: "N[C@@H](C(C)C)C(=O)"
    W: "N[C@@H](Cc1c[nH]c2c1cccc2)C(=O)"
    Y: "N[C@@H](Cc1ccc(O)cc1)C(=O)"
    a: "CN[C@@H](C)C(=O)" # N-Me-Ala
    d: "NC(C=O)=C" # Dha

  complement_table:
    65: 84
    67: 71
    84: 65
    71: 67
    78: 78
    
LibraryDesigns:
  dna_templates:
    - "ATGAGTGATATTACGGCTGAGAACCTCTACTTCCAGAGC112112112112112112112112324112112112112112112112112GGCAGCTACCCATATGACGTGCCCGACTATGCAGGCCGATAGTGACGGGGGGCGGAAA"
    
  dna_monomers:
    1: ["A", "G", "T", "C"]
    2: ["T"]
    3: ["A"]
    4: ["G"]
    
  pep_templates:
    - "dSDITAENLYFQS11111111321111111GSYPYDVPDYAGR"
    
  pep_monomers:
    1: ["A", "a", "D", "F", "G", "H", "I", "L", "N", "P", "R", "S", "T", "V", "Y"]
    2: ["A", "D", "E", "F", "G", "H", "I", "K", "L", "N", "R", "S", "T", "V", "W", "Y"]
    3: ["d"]

TrackerConfig:
  seq_data: "../sequencing_data"    # Directory holding sequencing data files (fastq or fastq.gz)
  logs: "../logs"                   # Directory for writing logs to
  parser_out: "../parser_outputs"   # Directory that stores fastqparser outputs
  analysis_out: "../parser_outputs" # Directory that stores outputs of data analysis operations
  ml_data: "../ml_data"             # Directory for machine learning data
  model: "../tf_trained_models"     # Directory for TensorFlow trained models
  
LoggerConfig:
  verbose: true                     # Verbose loggers print to the console
  log_to_file: true                 # Write logs to file
  level: "INFO"                     # Logger level; accepted values: 'DEBUG', 'INFO', 'WARNING', 'ERROR'

FastqParserConfig:
  utr5_seq: "AGGAGAT......ATG"      # A regex pattern that has to match to initiate the ORF 